53 Help Ramu

Ramu often uses public transport. The transport in the city is of two types: cabs and rickshaws. The city has n rickshaws and m cabs, the rickshaws are numbered by integers from 1 to n, the cabs are numbered by integers from 1 to m.

Public transport is not free. There are 4 types of tickets:

A ticket for one ride on some rickshaw or cab. It costs c1 ruppees;
A ticket for an unlimited number of rides on some rickshaw or on some cab. It costs c2 ruppees;
A ticket for an unlimited number of rides on all rickshaws or all cabs. It costs c3 ruppees;
A ticket for an unlimited number of rides on all rickshaws and cabs. It costs c4 ruppees.

Ramu knows for sure the number of rides he is going to make and the transport he is going to use. He asked you for help to find the minimum sum of ruppees he will have to spend on the tickets.

Input Format
Each Test case has 4 lines which are as follows:

The first line contains four integers c1, c2, c3, c4 (1 ≤ c1, c2, c3, c4 ≤ 1000) — the costs of the tickets.
The second line contains two integers n and m (1 ≤ n, m ≤ 1000) — the number of rickshaws and cabs Ramu is going to use.
The third line contains n integers ai (0 ≤ ai ≤ 1000) — the number of times Ramu is going to use the rickshaw number i.
The fourth line contains m integers bi (0 ≤ bi ≤ 1000) — the number of times Ramu is going to use the cab number i.

Constraints
1 <= T <= 1000 , where T is no of testcases
1 ≤ c1, c2, c3, c4 ≤ 1000
1 ≤ n, m ≤ 1000
0 ≤ ai , bi ≤ 1000

Output Format
For each testcase , print a single number - the minimum sum of rupees Ramu will have to spend on the tickets in a new line.

Sample Input
2
1 3 7 19
2 3
2 5
4 4 4
4 3 2 1
1 3
798
1 2 3
Sample Output
12
1
Explanation
For the first testcase ,
The total cost of rickshaws = min( min(2 * 1, 3) + min(5 * 1, 3), 7) = min(5, 7) = 5
The total cost of cabs = min( min(4 * 1, 3) + min(4 * 1, 3) + min(4 * 1, 3) , 7) = min ( 9, 7) = 7
Total final cost = min( totalCabCost + totalRickshawCost , c4) = min( 5 + 7, 19) = min ( 12, 19) = 12
We print 12.


Solution:
***********


#include<bits/stdc++.h>
using namespace std;

int main()
{

	int t;
	cin>>t;
	while(t--)
	{

		int c1,c2,c3,c4;
		cout<<"Enter The Values of c1,c2,c3,c4 ";
		cin>>c1>>c2>>c3>>c4;
		int n,m;
		cout<<"Enter The Number Of Rickshaws : ";
		cin>>n;
		cout<<"Enter The Number of Cabs : ";
		cin>>m;
		int r[n],c[m];
		cout<<"Enter The input for Rickshaws : ";
		for(int i=0;i<n;i++)
			cin>>r[i];
		cout<<"\nEnter The input for Cabs : ";
		for(int i=0;i<m;i++)
			cin>>c[i];

			int minR=0,minC=0;
			for(int i=0;i<n;i++)
			{
				minR=min(minR+min(r[i]*c1,c2),c3);

			}
			cout<<"The Total Cost Of Rickshaws : "<<minR<<endl;
			for(int i=0;i<m;i++)
			{

				minC=min(minC+min(c[i]*c1,c2),c3);
			}
			cout<<"The Total Cost of Cabs : "<<minC<<endl;
			int finalCost=min(minC+minR,c4);
			cout<<"Total Final Cost is : "<<finalCost<<endl<<endl;
	}
}


----------------------------------------------------------------------------------------------------------------------
54 Sorting In Linear Time
You will be given an array containing only 0s, 1s and 2s. you have sort the array in linear time that is O(N) where N is the size of the array.

Input Format
The first line contains N, which is the size of the array. The following N lines contain either 0, or 1, or 2.

Constraints
1 <= N <= 10^6
Each input element x, such that x ∈ { 0, 1, 2 }.

Output Format
Output the sorted array with each element separated by a newline.

Sample Input
5
0
1
2
1
2
Sample Output
0
1
1
2
2
Sort an array of 0’s 1’s 2’s without using extra space or sorting algo 
https://www.youtube.com/watch?v=oaVa-9wmpns&list=PLgUwDviBIf0rPG3Ictpu74YWBQ1CaBkm2&index=2 (Problem link in description)


solution
**********************

Approach 1:Sort The given Data
class Solution {
public:
    void sortColors(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        
    }
};
Approach 2:Count the number of 0’s, 1’s and 2’s. After Counting, put all 0’s first, then 1’s and lastly 2’s in the array. We traverse the array two times. Time complexity will be O(n).
            class Solution {
public:
    void sortColors(vector<int>& nums) {
int c0=0,c1=0,c2=0;
        for(int i=0;i<nums.size();i++)
        {
           if(nums[i]==0)
               c0++;
            else if(nums[i]==1)
                c1++;
            else
                c2++;
        }
        int i=0;
        while(c0--)
            nums[i++]=0;
        while(c1--)
            nums[i++]=1;
        while(c2--)
            nums[i++]=2;
        
            
        
        
    }
};

Approach 3:Dutch national flag problem
https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/
class Solution {
public:
    void sortColors(vector<int>& nums) {
        int low=0,mid=0,high=nums.size()-1;
        while(mid<=high)
        {
            if(nums[mid]==0)
            {
                swap(nums[mid],nums[low]);
                mid++;
                low++;
            }
            else if(nums[mid]==1)
                mid++;
            else
            {
                swap(nums[mid],nums[high]);
                high--;
            }
        }
        
    }
};
---------------------------------------------------------------------------------------------------------
55 Calculate Length of string

#include<bits/stdc++.h>
using namespace std;

int main()
{

	string str;
	cout<<"Enter Your Full Name : ";
	getline(cin,str);
	cout<<"\nYour Entered Names : "<<str;
	cout<<"\nLength Of Given String is : "<<str.size();
}

-------------------------------------------------------------------------------------------------------------


56 Check Palindromic

#include<bits/stdc++.h>
using namespace std;
bool checkPalindrome(string str)
{

	int i=0,j=str.size()-1;
	while(i<j)
	{

		if(str[i]!=str[j])return false;
		i++;
		j--;
	}
	return true;
}
int main()
{

	string str;
	cout<<"Enter a String : \n";
	getline(cin,str);
	if(checkPalindrome(str))
		cout<<str<<" is a Palindrome\n";
	else
		cout<<str<<" is not a palindrome";


}

--------------------------------------------------------------------------------------------------------------

57 Read a Number and A string Easy


#include<bits/stdc++.h>
using namespace std;

int main()
{

	string str;
	cout<<"Enter Your Full Name : ";
	getline(cin,str);
	cout<<"\nYour Entered Names : "<<str;
	cout<<"\nLength Of Given String is : "<<str.size();

	int num;
	cout<<"\nEnter Your Number : ";
	cin>>num;
	cout<<"Your Entered Number is : "<<num;
}

----------------------------------------------------------------------------------------------------------------
58 Append two Strings Medium


#include<bits/stdc++.h>
using namespace std;

int main()
{

	string str1,str2;
	cout<<"Enter a String1 : \n";
	getline(cin,str1);

	cout<<"Enter a String2 : \n";
	getline(cin,str2);
	cout<<"Original String1 is : "<<str1;
	str1.append(str2);
	cout<<"\nAfter Appending String1 is : "<<str1;

}

----------------------------------------------------------------------------------------------------------------
59 Find largest string of N strings Medium

#include<bits/stdc++.h>
using namespace std;

int main()
{

	string str1;
	vector<string>v;
	int n;
	cout<<"Enter The Size of Array : ";
	cin>>n;
	cout<<"Enter The Input : ";
	for(int i=0;i<n;i++)
	{
		cin>str;
		v.push_back(str1);

	}
	int len=0,maxLen=v[0].size();
	string res=v[0];
	for(int i=1;i<n;i++)
	{

		len=v[i].size();
		if(len>maxLen)
		{

			maxLen=len;
			res=v[i];
		}
	}


	cout<<"Largest Of Given String is : "<<res;

}


or   ------------

Approach 2:

If N strings is given as input and we have to find the largest string. (String which contains maximum elements).
In that case Solution will be like this:

#include<iostream>
#include<string>
using namespace std;
  int main()
  {
  int n;
  string str, mxtr;
  cin>>n;
  int len=0,max=0;
  for(int i=0;i<n;i++)
  {
  cin>>str;
  len=str.size();
  if(len>max)
  {
  max=len;
  mxtr= str;
  }
 }
 cout<<mxtr;
}


------------------------------------------------------------------------------------------------------------------
60 Reverse a string Easy

#include<bits/stdc++.h>
using namespace std;
string reverseString(string str)
{

	int i=0,j=str.size()-1;
	while(i<j)
	{

		swap(str[i],str[j]);
		i++;j--;
	}
	return str;
}
int main()
{

	string str1,str2;
	cout<<"Enter a String1 : ";
	getline(cin,str1);

	cout<<"Reverse of : "<<str1<<"is :"<<reverseString(str1);

}

-----------------------------------------------------------------------------------------------------------------
